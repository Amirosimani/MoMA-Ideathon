df <- data.frame(sleep, grade)
ggplot(data =df, aes(x = sleep, y =drade)) + geom_point()
ggplot(data =df, aes(x = sleep, y =grade)) + geom_point()
ggplot(data =df, aes(x = sleep, y =grade)) + geom_point() + geom_smooth
ggplot(data =df, aes(x = sleep, y =grade)) + geom_point() + geom_smooth()
rep.int(c(1,0), c(50,50))
class <- rep.int(c(1,0), c(50,50))
x<- runif(100, mi=10, max =20)
y<- 5*x +40 + rnorm(100) + class *-2*x
df2 <- data.frame(input =x, output = y, condition = class)
df2
ggplot(df2, aes(x = input, y = output))
ggplot(df2, aes(x = input, y = output)) + geom_point()
ggplot(df2, aes(x = input, y = output)) + geom_point() + facet_grid(.~condition)
ggplot(df2, aes(x = input, y = output)) + geom_point() + facet_grid(.~condition) + geom_smooth()
grade <- sleep + sleep^2 + rnorm(length(sleep), sd = 10)
df <- data.frame(sleep, grade)
ggplot(data =df, aes(x = sleep, y =grade)) + geom_point() + geom_smooth()
class <- rep.int(c(1,0), c(50,50))
x<- runif(100, mi=10, max =20)
y<- 5*x +40 + rnorm(100) + class *-2*x
df2 <- data.frame(input =x, output = y, condition = class)
ggplot(df2, aes(x = input, y = output)) + geom_point() + facet_grid(.~condition) + geom_smooth()
x<- runif(100, mi=10, max =20)
y<- 5*x +40 + rnorm(100) + class *-2*x +rnorm(100, sd = 10)
df2 <- data.frame(input =x, output = y, condition = class)
ggplot(df2, aes(x = input, y = output)) + geom_point() + facet_grid(.~condition) + geom_smooth()
ggplot(df2, aes(x = input, y = output)) + geom_point() +  geom_smooth()
facet_grid(.~condition) + ggplot(df2, aes(x = input, y = output)) + geom_point() +  geom_smooth()
ggplot(df2, aes(x = input, y = output)) + geom_point() +  geom_smooth() + facet_grid(.~condition)
ggplot(df2, aes(x = input, y = output)) + geom_point() +  geom_smooth() + facet_grid(.~condition) + theme_minimal
ggplot(df2, aes(x = input, y = output)) + geom_point() +  geom_smooth() + facet_grid(.~condition) + theme_minimal()
### 0. libraries----
library(data.table)
library(plyr)
library(circlize)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(cluster)
library(tm)
library(SnowballC)
library(RColorBrewer)
library(wordcloud)
Dem = fread(file.choose() ,header=TRUE)
Dia = fread(file.choose() ,header=TRUE)
Dem$race[Dem$race == 'Hispanic-HISPANIC'] = 'Hispanic'
Dem$race[Dem$race == 'White-WHITE'] = 'White'
Dem$race[Dem$race == 'American Indian-AMERICAN INDIAN'] = 'American Indian'
Dem$race[Dem$race == 'Asian-ASIAN'] = 'Asian'
Dem$race[Dem$race == 'BLACK OR AFRICAN AMERICAN'] = 'African American'
Dem$race[Dem$race == 'Black-BLACK'] = 'Black'
#Data conversion
Dem$date_of_birth = as.Date(Dem$date_of_birth)
Dem$date_of_death = as.Date(Dem$date_of_death)
Dia$dia_date = as.Date(Dia$dia_date)
### 3. Basic stats and plots----
options(digits=3)
race_gender <- dcast( Dem , race ~ gender , length )
race_gender$total <- race_gender$female + race_gender$male
race_gender <- race_gender[order(-race_gender$total),]
race_gender$age_average <- c(69.6,70.8,60.6,72.2,72.4,65.2)
race_gender$age_sd <- c(22.3,20.1,21.0,20.5,21.4,22.5)
row.names(race_gender) <- NULL
new_row <- c("All races",200,200,400,69.4,21.8)
race_gender <- rbind(new_row, race_gender)
#race and gender table
grid.table(race_gender, rows=NULL)
"tableau for bubble chart"
positions <- c("White", "Black", "Asian", "African American", "Hispanic","American Indian")
ggplot(Dem, aes(race, fill=gender)) + scale_x_discrete(limits = positions) +
geom_bar() +
ggtitle("Breakdown of patients based on Race and Gender")
geom_text(aes(label = count, y = pos), size = 3) + geom_text()
ggplot(Dem, aes(race, age)) + geom_boxplot(fill = "grey80", colour = "#3366FF") +
ggtitle("Patients average Age based on Race")
ggplot(Dem, aes(race, age, fill = gender)) + geom_boxplot() +
ggtitle("Patients age based on race and gender")
ggplot() +
geom_freqpoly(data = Dem, aes(age), binwidth = 5, size = 1.5) +
geom_freqpoly(data = Dem, aes(age, fill = race, colour = race),binwidth = 5, size = 1) + xlim(20, 100) +
ggtitle("Age distribution based on Race") +
geom_vline(xintercept=37, size = 0.3, color ="grey") + geom_vline(xintercept=58, size = 0.3, color ="grey")
ggplot() +
geom_freqpoly(data = Dem, aes(age), binwidth = 5, size = 1.5) +
geom_freqpoly(data = Dem, aes(age, fill = gender, colour = gender), binwidth = 5, size = 1) +
xlim(20, 100) + scale_fill_brewer() +
ggtitle("Age distribution based on Gender") +
geom_vline(xintercept=37, size = 0.3, color ="grey") + geom_vline(xintercept=58, size = 0.3, color ="grey")
aggregate(age~gender, Dem, function(x) c(mean = mean(x), sd = sd(x)))
ggplot(Dem, aes(gender, age)) + geom_boxplot(fill = "grey80", colour = "#3366FF")+
ggtitle("Patients average age based on Gender")
jpg("1.jpg")
bmp("1.bmp")
ggplot() +
geom_freqpoly(data = Dem, aes(age), binwidth = 5, size = 1.5) +
geom_freqpoly(data = Dem, aes(age, fill = race, colour = race),binwidth = 5, size = 1) + xlim(20, 100) +
ggtitle("Age distribution based on Race") +
geom_vline(xintercept=37, size = 0.3, color ="grey") + geom_vline(xintercept=58, size = 0.3, color ="grey")
dev.off()
bmp("2.bmp")
ggplot() +
geom_freqpoly(data = Dem, aes(age), binwidth = 5, size = 1.5) +
geom_freqpoly(data = Dem, aes(age, fill = gender, colour = gender), binwidth = 5, size = 1) +
xlim(20, 100) + scale_fill_brewer() +
ggtitle("Age distribution based on Gender") +
geom_vline(xintercept=37, size = 0.3, color ="grey") + geom_vline(xintercept=58, size = 0.3, color ="grey")
dev.off()
white <- Dem[ which(Dem$race =='White')]
#visualizing age of patients only for whites
"both female and male patients have an increase after "
ggplot() +
geom_freqpoly(data = white, aes(age), binwidth = 5, size = 2) +
geom_freqpoly(data = white, aes(age, fill = gender, colour = gender),binwidth = 5, size = 1) +
xlim(20, 100) + scale_fill_brewer() +
ggtitle("White patients' age based on gender") +
geom_vline(xintercept=37, size = 0.3, color ="grey") + geom_vline(xintercept=47, size = 0.3, color ="grey")
bmp("3.bmp")
ggplot() +
geom_freqpoly(data = white, aes(age), binwidth = 5, size = 2) +
geom_freqpoly(data = white, aes(age, fill = gender, colour = gender),binwidth = 5, size = 1) +
xlim(20, 100) + scale_fill_brewer() +
ggtitle("White patients' age based on gender") +
geom_vline(xintercept=37, size = 0.3, color ="grey") + geom_vline(xintercept=47, size = 0.3, color ="grey")
dev.off()
bmp("3.bmp")
ggplot() +
geom_freqpoly(data = white, aes(age), binwidth = 5, size = 2) +
geom_freqpoly(data = white, aes(age, fill = gender, colour = gender),binwidth = 5, size = 1) +
xlim(20, 100) + scale_fill_brewer() +
ggtitle("White patients' age based on gender") +
geom_vline(xintercept=37, size = 1, color ="grey") + geom_vline(xintercept=47, size = 0.3, color ="grey")
dev.off()
bmp("3.bmp")
ggplot() +
geom_freqpoly(data = white, aes(age), binwidth = 5, size = 2) +
geom_freqpoly(data = white, aes(age, fill = gender, colour = gender),binwidth = 5, size = 1) +
xlim(20, 100) + scale_fill_brewer() +
ggtitle("White patients' age based on gender") +
geom_vline(xintercept=37, size = 1, color ="grey") + geom_vline(xintercept=47, size = 1, color ="grey")
dev.off()
N = 3
people <- read.csv('/Users/Amiros/GitHub/MWH/people.csv', sep = ",")
people$X <- NULL
people$from <- as.character(people$from)
people <- as.data.frame(sapply(people, function(x) gsub("UNCLASSIFIEDUSDepartmentofStateCaseNoFDocNoC", "", x)))
from <- as.data.frame(sort(table(people$from), decreasing = TRUE))
from <- setDT(from, keep.rownames = T)[]
library(data.table)
from <- as.data.frame(sort(table(people$from), decreasing = TRUE))
from <- setDT(from, keep.rownames = T)[]
top100 <- from[1:100,]
selected <- people[people$from %in% top100$rn,]
library(plyr)
cdata <- ddply(selected, c("from", "to"), summarise)
cdata <- ddply(selected, c("from", "to"), summarise,   N = length(from))
View(cdata)
a <- setDT(tstrsplit(as.character(selected$to), ";", fixed=TRUE))[]
mat_sel <- cbind(selected$from, a,b)
mat_sel <- cbind(selected$from, a)
colnames(mat_sel)[1] <- "from"
View(mat_sel)
mat_sel <- subset(mat_sel, V1 = NULL | from = NULL)
mat_sel <- subset(mat_sel, V1 == NULL | from == NULL)
mat_sel <- cbind(selected$from, a)
mat_sel <- subset(mat_sel, V1 == NULL)
mat_sel <- cbind(selected$from, a)
mat_sel <- subset(mat_sel, V1 == NA )
mat_sel <- cbind(selected$from, a)
mat_sel <- subset(mat_sel, V1 == "NA" )
mat_sel <- cbind(selected$from, a)
colnames(mat_sel)[1] <- "from"
mat_sel <- mat_sel[ V1 != 'NA']
View(mat_sel)
mat_sel <- mat_sel[ V1 != 'NA' | from != 'NA']
mat_sel <- mat_sel[ V1 != 'NA' | from != '']
View(mat_sel)
mat_sel <- mat_sel[ V1 != 'NA' | from != '' | nchar(V1) < 15]
mat_sel <- mat_sel[ from != '']
mat_sel <- mat_sel[ nchar(V1) < 15 ]
View(mat_sel)
mat_sel <- cbind(selected$from, a)
colnames(mat_sel)[1] <- "from"
mat_sel <- mat_sel[ V1 != 'NA' & from != '' & nchar(V1) < 15]
a[, list(V1, V2, V3, V4, V5)]
a <- a[, list(V1, V2, V3, V4, V5)]
View(a)
mat_sel <- cbind(selected$from, a)
colnames(mat_sel)[1] <- "from"
mat_sel <- mat_sel[ V1 != 'NA' & from != '' & nchar(V1) < 15]
View(mat_sel)
View(from)
View(selected)
people <- read.csv('/Users/Amiros/GitHub/MWH/people.csv', sep = ",")
people$X <- NULL
people$from <- as.character(people$from)
people <- as.data.frame(sapply(people, function(x) gsub("UNCLASSIFIEDUSDepartmentofStateCaseNoFDocNoC", "", x)))
from <- as.data.frame(sort(table(people$from), decreasing = TRUE))
from <- setDT(from, keep.rownames = T)[]
View(from)
top100 <- from[1:100,]
top100 <- top100[from != '']
View(top100)
top100 <- top100[rn != '']
selected <- people[people$from %in% top100$rn,]
recipients_sep <- setDT(tstrsplit(as.character(selected$to), ";", fixed=TRUE))[]
recipients_sep <- a[, list(V1, V2, V3, V4, V5)] ##keep the first 5 recipeints
recipients_sep <- recipients_sep[, list(V1, V2, V3, V4, V5)] ##keep the first 5 recipeints
View(recipients_sep)
mat_sel <- cbind(selected$from, recipients_sep)
View(mat_sel)
colnames(mat_sel)[1] <- "from"
View(mat_sel)
mat_sel2 <- mat_sel[ V1 != 'NA' & from != '' & nchar(V1) < 15]
View(mat_sel2)
mat_sel2 <- mat_sel[ V1 != 'NA']
View(mat_sel2)
mat_sel2 <- mat_sel[ V1 != 'NA' & nchar(V1) < 15]
View(mat_sel2)
mat_sel2 <- mat_sel[ V1 != 'NA' & nchar(V1) < 25]
View(mat_sel2)
mat_sel2 <- mat_sel[ V1 != 'NA' & nchar(V1) < 50]
View(mat_sel2)
mat_sel2 <- mat_sel[ V1 != 'NA' & nchar(V1) < 80]
View(mat_sel2)
mat_sel <- mat_sel[ V1 != 'NA' & nchar(V1) < 80]
rm(mat_sel2)
cdata <- ddply(mat_sel, c("from", "V1"), summarise,   N = length(from))
View(cdata)
mat_sel <- mat_sel[ V1 != 'NA' & nchar(V1) < 50]
cdata <- ddply(mat_sel, c("from", "V1"), summarise,   N = length(from))
View(cdata)
mat_sel <- mat_sel[ V1 != 'NA' & nchar(V1) < 37]
mat_sel <- mat_sel[ V1 != 'NA' & nchar(V1) < 37 & v1 != '']
mat_sel <- mat_sel[ V1 != 'NA' & nchar(V1) < 37 & V1 != '']
cdata <- ddply(mat_sel, c("from", "V1"), summarise,   N = length(from))
cdata <- ddply(mat_sel, c("from", "V1", "V2"), summarise,   N = length(from))
View(cdata)
cdata1 <- ddply(mat_sel, c("from", "V1"), summarise,   N = length(from))
cdata2 <- ddply(mat_sel, c("from", "V1", "V2"), summarise,   N = length(from))
View(cdata1)
View(cdata2)
cdata2 <- ddply(mat_sel, c("from", "V2"), summarise,   N = length(from))
View(cdata2)
View(cdata1)
recipients_sep <- recipients_sep[, list(V1, V2)] ##keep the first recipeint
mat_sel <- cbind(selected$from, recipients_sep)
colnames(mat_sel)[1] <- "from"
mat_sel <- mat_sel[ V1 != 'NA' & nchar(V1) < 37 & V1 != '']
cdata1 <- ddply(mat_sel, c("from", "V1"), summarise,   N = length(from))
cdata2 <- ddply(mat_sel, c("from", "V2"), summarise,   N = length(from))
rm(cdata)
View(cdata1)
View(cdata2)
View(cdata1)
cdata3 <- ddply(mat_sel, c("from", "V1","V2"), summarise,   N = length(from))
View(cdata3)
rm(cdata3)
rbind.fill(list(cdata1, cdata2)))
rbind.fill(list(cdata1, cdata2))
pp <- cbind(names=c(rownames(cdata1), rownames(cdata2)),
rbind.fill(list(cdata1, cdata2))
)
View(pp)
recipients_sep <- recipients_sep[, list(V1)] ##keep the first recipeint
mat_sel <- cbind(selected$from, recipients_sep)
colnames(mat_sel)[1] <- "from"
mat_sel <- mat_sel[ V1 != 'NA' & nchar(V1) < 37 & V1 != '']
cdata1 <- ddply(mat_sel, c("from", "V1"), summarise,   N = length(from))
View(cdata1)
View(pp)
get.adjacency(graph.edgelist(as.matrix(cdata1), directed=T))
library(igraph)
a <- get.adjacency(graph.edgelist(as.matrix(cdata1), directed=T))
mat <- cdata1[, list(from, V1)]
View(cdata1)
mat <- cdata1[, list(from,V1)]
cdata2 <- cdata1[, list(from,V1)]
View(cdata2)
View(cdata1)
names(cdata1)
cdata2 <- cdata1[, list(V1)]
rm(cdata2)
rm(pp)
mat <- cdata1[,N:=NULL]
mat <- cdata1
View(mat)
mat$N <- NULL
View(mat)
a <- get.adjacency(graph.edgelist(as.matrix(mat), directed=T))
ig <- graph.adjacency(cdata1, mode="undirected", weighted=TRUE)
ig <- graph.adjacency(cdata1, mode="directed", weighted=TRUE)
ig <- graph.adjacency(mat, mode="directed", weighted=TRUE)
library(igraph)
n <- 71
p <- 0.5
g <- erdos.renyi.game(n, p, type = c("gnp"), directed = TRUE, loops = FALSE)
cc <- transitivity(g, type = c("global"), vids = NULL, weights = NULL, isolates = c("NaN", "zero"))
APL <- average.path.length(g, directed = TRUE)
delta <- cc/APL
p <- 0.25
g <- erdos.renyi.game(n, p, type = c("gnp"), directed = TRUE, loops = FALSE)
cc <- transitivity(g, type = c("global"), vids = NULL, weights = NULL, isolates = c("NaN", "zero"))
APL <- average.path.length(g, directed = TRUE)
delta <- (cc/0.51)/(APL/1.54)
p <- 0.5
g <- erdos.renyi.game(n, p, type = c("gnp"), directed = TRUE, loops = FALSE)
#clustering coefficient
cc <- transitivity(g, type = c("global"), vids = NULL, weights = NULL, isolates = c("NaN", "zero"))
#Average shortest path
APL <- average.path.length(g, directed = TRUE)
#small worldness measusre
delta <- (cc/0.51)/(APL/1.54)
p <- 0.75
g <- erdos.renyi.game(n, p, type = c("gnp"), directed = TRUE, loops = FALSE)
#clustering coefficient
cc <- transitivity(g, type = c("global"), vids = NULL, weights = NULL, isolates = c("NaN", "zero"))
#Average shortest path
APL <- average.path.length(g, directed = TRUE)
#small worldness measusre
delta <- (cc/0.51)/(APL/1.54)
n <- 360000000
p <- 0.25
g <- erdos.renyi.game(n, p, type = c("gnp"), directed = F, loops = FALSE)
g <- erdos.renyi.game(n, p, type = c("gnp"), directed = F, loops = FALSE)
n <- 71
p <- 1
g <- erdos.renyi.game(n, p, type = c("gnp"), directed = TRUE, loops = FALSE)
cc <- transitivity(g, type = c("global"), vids = NULL, weights = NULL, isolates = c("NaN", "zero"))
APL <- average.path.length(g, directed = TRUE)
library(igprah)
library(igpraph)
library(igraph)
setwd("~/GitHub/MoMA Ideathon")
library(ggplot2)
library(plyr)
library(reshape)
library(stringr)
library(data.table)
moma.data = read.csv("MoMA.csv")
data <-moma.data[(moma.data$Department =="Drawings") |
(moma.data$Department =="Painting & Sculpture") |
(moma.data$Department =="Prints & Illustrated Books") |
(moma.data$Department =="Photography")
, ]
data <- data[!(data$Classification=="Illustrated Book"), ]
data <- data[!(data$Classification=="Periodical"), ]
data <- data[, !(colnames(data) %in% c("Dimensions","LenCm1","LenCm2", "LenCm3", "LenCm4", "LenCm5",
"WidCm1","WidCm2","WidCm3","WidCm4","WidCm5",
"HtCm1","HtCm2","HtCm3","HtCm4","HtCm5",
"YrStart","YrComp"))]
View(data)
library(lubridate)
data$DateAcquired <- as.Date(data$DateAcquired)
data[, "YrAcquired"] <- year(data$DateAcquired)
data$DateAcquired <- as.numeric(data$DateAcquired)
data$Date = gsub("[a-z]", "", data$Date)
data$Date = gsub("[A-Z]", "", data$Date)
data$Date = str_replace_all(data$Date, " ", "")
data$Date = str_replace_all(data$Date, "[^[:alnum:]]", "")
data$Date = substr(data$Date,1,4)
data$Date = as.numeric(data$Date)
data[, "BlankSpace"] <- data$YrAcquired - data$Date
data[, "ArtworkAge"] <- 2016 - data$YrBirth
ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +  theme(panel.background = element_blank()) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +  theme(panel.background = element_blank(), legend.text=element_text(size=10)) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +  theme(panel.background = element_blank(), legend.text=element_text(size=15)) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +  theme(panel.background = element_blank(), legend.text=element_text(size=25)) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +  theme(panel.background = element_blank()) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +  theme(panel.background = element_rect()) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +  theme(panel.background = element_rect(),axis.line = element_line(size = 10) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +  theme(panel.background = element_rect(),axis.line = element_line(size = 10)) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +  theme(panel.background = element_rect(), axis.text = element_text(size = 10)) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +  theme(panel.background = element_rect(), axis.text = element_text(size = 20)) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +  theme(panel.background = element_rect(), axis.text = element_text(size = 15)) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20)) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20)) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(25)) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(22)) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace, fill = factor(Gift), color = factor(Gift))) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace, fill = factor(Gift), color = factor(Gift))) +
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +
labs(title = "How long after completion did it take to get in MoMA?", x = "Year", Y = "Number of Artworks")
View(data)
ggplot(data, aes(BlankSpace, fill = factor(Department), color = factor(Department))) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +
labs(title = "How long for each department?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(BlankSpace, fill = factor(Department), color = factor(Department))) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 150) +
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
labs(title = "How long for each department?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(ArtworkAge)) +
geom_freqpoly(binwidth = 10, size = 1.5) + xlim(0, 220) +
labs(title = "How old was the Artwork?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(ArtworkAge)) +
geom_freqpoly(binwidth = 10, size = 1.5) + xlim(0, 220) +
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
labs(title = "How old was the Artwork?", x = "Year", Y = "Number of Artworks")
ggplot(data, aes(ArtworkAge, fill = factor(Gift), color = factor(Gift))) +
geom_freqpoly(binwidth = 10, size = 1.5) +
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
ggplot(data, aes(ArtworkAge, fill = factor(Gift), color = factor(Gift))) +
geom_freqpoly(binwidth = 10, size = 1.5) +
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22))
post60 <- data[data$YrAcquired>1960,]
ggplot(post60, aes(BlankSpace, color = "red")) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 100) + ylim(0, 20000)+
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
labs(title = "Blank space for post 1960 artworks", x = "Year", Y = "Number of Artworks")
ggplot(post60, aes(BlankSpace, , fill = factor(Gift), color = factor(Gift))) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 100) + ylim(0, 10000)+
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
labs(title = "Blank space for post 1960 artworks", x = "Year", Y = "Number of Artworks")
ggplot(post60, aes(BlankSpace, color = "red")) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 100) + ylim(0, 20000)+
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
labs(title = "Blank space for post 1960 artworks", x = "Year", Y = "Number of Artworks")
ggplot(post60, aes(BlankSpace, , fill = factor(Gift), color = factor(Gift))) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 100) + ylim(0, 10000)+
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
labs(title = "Blank space for post 1960 artworks", x = "Year", Y = "Number of Artworks")
ggplot(post60, aes(BlankSpace, , fill = factor(Gift), color = factor(Gift))) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 100) + ylim(0, 10000)+
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
labs(title = "Blank space for post 1960 artworks", x = "Year", Y = "Number of Artworks")
ggplot(post60, aes(BlankSpace, , fill = factor(Department), color = factor(Department))) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 100) + ylim(0, 10000)+
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
labs(title = "Blank space post 1960 artworks", x = "Year", Y = "Number of Artworks")
ggplot(pre1960, aes(BlankSpace, color = "FF9999")) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 100) + ylim(0, 20000)+
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
labs(title = "Blank space for post 1960 artworks", x = "Year", Y = "Number of Artworks")
pre1960 <- data[(data$YrAcquired <1960) & (data$YrAcquired > 1925) ,]
ggplot(pre1960, aes(BlankSpace, color = "FF9999")) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 100) + ylim(0, 20000)+
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
labs(title = "Blank space for post 1960 artworks", x = "Year", Y = "Number of Artworks")
ggplot(pre1960, aes(BlankSpace, , fill = factor(Gift), color = factor(Gift))) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 100) + ylim(0, 10000)+
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
labs(title = "Blank space for post 1960 artworks", x = "Year", Y = "Number of Artworks")
ggplot(pre1960, aes(BlankSpace, , fill = factor(Department), color = factor(Department))) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 100) + ylim(0, 10000)+
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
labs(title = "Blank space post 1960 artworks", x = "Year", Y = "Number of Artworks")
contemp.data <- data[data$YrAcquired < data$YrDeath,]
contemp.comp <-contemp.data[complete.cases(contemp.data$BlankSpace),]
contemp.comp.painting <- contemp.comp[contemp.comp$Department == "Painting & Sculpture",]
count(contemp.comp$Department)
data[, "contemporary"] <- 2016 - data$YrBirth
data$contemporary <- ifelse(data$YrAcquired < data$YrDeath, 1, 0)
ggplot(contemp.comp, aes(BlankSpace, fill = factor(Gift), color = factor(Gift))) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 100) +
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
labs(title = "Blank space for contemporary artworks", x = "Year", Y = "Number of Artworks")
ggplot(contemp.comp, aes(BlankSpace, fill = factor(Department), color = factor(Department))) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 100) +
theme(panel.background = element_rect(), axis.text = element_text(size = 15), axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), plot.title = element_text(size = 22)) +
labs(title = "Blank space for contemporary artworks", x = "Year", Y = "Number of Artworks")
plot1<- ggplot(data, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5)
plot2<- ggplot(pre1960, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 100) + ylim(0, 20000)
plot1 + plot2
plot2 + ggplot(post60, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 100) + ylim(0, 20000)+
labs(title = "Blank space for post 1960 artworks", x = "Year", Y = "Number of Artworks")
plot2 + ggplot(post60, aes(BlankSpace)) +
geom_freqpoly(binwidth = 5, size = 1.5) + xlim(0, 100) + ylim(0, 20000)+
labs(title = "Blank space for post 1960 artworks", x = "Year", Y = "Number of Artworks")
